{"./":{"url":"./","title":"产品介绍","keywords":"","body":"AutoWork 产品介绍 关于 AutoWork AutoWork 是南京云帐房网络科技有限公司自主研发的企业级 RPA 产品（机器人流程自动化）平台，意在为企业客户提供简单易用、安全稳定的智能自动化解决方案。RPA 全称 Robotic Process Automation，中文名机器人流程自动化，可以减少人为重复、繁琐、大批量的工作任务；代替人工进行流程化、自动化操作。主要应用于财务报销、会计核算、订单管理、IT资产管理、人力资源管理、医疗付款自动化等行业。7*24小时不间断；减少人工错误、确保零失误、提高效率、大幅度降低运营成本。 AutoWork 优势是什么？ AutoWork 的效率大约是人类的 3 倍，而且一天的工作时间并不拘泥于 8 小时，效率优势可想而知。其次是精准度高，相比于人类的手动工作，机器的准确性自是不言而喻的。AutoWork 的应用将把人们从枯燥乏味的无聊工作中彻底解放出来。 自主可控。 AutoWork 核心引擎自主研发，并形成专利。 扩展性强。 提供 python、C/C++、lua 等多种编程语言的扩展接口；方便功能扩展与维护。 快速部署。 自动化设计和部署只需 1-2 周；领先国内同行。 易学易用。 中文可视化编程，不会英文也能懂，不会编程也能用；非专业人士亦可掌握。 组件丰富。 200+的预置组件，满足所有日常需要；涵盖大部分 RPA 应用场景。 全面兼容。 支持浏览器、桌面等多种 UI 自动化； 支持 Windows/Mac 等平台。 AutoWork 可以用在哪儿？ 找到最适合的场景是挖掘 RPA 最大潜能的核心，能清晰梳理出有规则的手工操作的业务流程的场景，就能使用 AutoWork 提升效能。 目前的应用场景包括但不限于金融、保险、零售、制造业、医疗、电信、人力资源... "},"1.1.html":{"url":"1.1.html","title":"安装说明","keywords":"","body":"安装说明 安装程序下载 点击页面上方的产品官网，然后点击我要下载，即可下载设计端安装包。 安装前注意事项 操作系统只支持 Windows，且不能低于 Win7 SP1 版本，否则无法运行 安装目标文件路径中可以包含中文目录，但不要含空格 安装前尽量关闭杀毒软件，防止安装失败 开始安装 双击下载好的 AutoWorkDesigner.exe 程序即可开始安装。 安装前阅读“AutoWork 服务条款”并勾选，可以点击右下角自定义安装路径，默认安装在 C:\\AutoWorkDesigner 文件夹下。 安装过程为一键式，最后会弹出一个 C++ 2015 依赖库的安装程序，这是设计端运行必须的依赖，如果电脑上已经安装过可以直接点击关闭，否则勾选“我同意许可条款和条件”并点击安装。 安装成功之后在桌面会生成设计器的运行程序，双击即可运行。 卸载说明 如需卸载，请双击安装目录下的 unins000.exe 程序。 "},"1.2.html":{"url":"1.2.html","title":"注册账号","keywords":"","body":"注册账号 注册 打开设计端，进入用户登录界面后，点击【快速注册】进入用户注册界面。 之后会跳转到注册页面，填写好各项信息之后点击完成，即可成功注册账号。 "},"1.3.html":{"url":"1.3.html","title":"激活并登录","keywords":"","body":"激活并登录 激活 设计端需要激活才能使用，注册好账号之后，登录 AutoWork 管理端之后点击左侧授权许可管理，然后生成授权许可，之后复制激活码并粘贴至设计端即可使用。（目前暂不支持个人直接生成激活码）。 登录 打开设计端，进入用户登录界面后，输入注册的账号与密码，点击登录，会弹出激活的提示，输入上一步生成的激活码后即可成功登录并进入软件界面。 "},"2.1.html":{"url":"2.1.html","title":"界面布局说明","keywords":"","body":"界面布局说明 流程管理界面 流程是一系列用于自动化处理的任务逻辑，由人来设计编写，并交给机器人负责运行。 本地流程。包括本地编辑的未上传的流程以及从线上下载的流程。 本地流程的标签页显示流程名称、所在的文件目录 未上传过的本地流程没有版本信息，从线上下载到本地的流程则会显示版本信息 另外，线上下载的流程会多出来一个更新按钮，点击之后可以更新本地的流程文件到最新版本 点击右侧的文件夹图标可以打开流程所在的文件目录 默认按照最近打开时间从上往下排序，点击右上角的最近打开按钮之后可以倒序排列 线上流程。线上流程表示从本地上传到 AutoWork 商城（管理端可查看）中的流程。 在线上流程标签页中展示流程的版本信息，以及是否已经下载到本地的信息 对于未下载的流程可以点击右侧的图标将流程下载到本地，已下载的流程则会提示是否覆盖 默认按照更新时间从上往下排序，点击右上角的更新时间按钮之后可以倒序排列 都支持根据流程名称搜索流程的功能，这在流程很多的时候非常有用 鼠标移动到流程上之后在最右侧会出现一个X符号，点击之后可以删除流程 新建流程。点击右下角的新建按钮，在弹出的窗口中填写流程名称并选择保存的位置，点击确定即可 打开本地的流程文件。点击右下角的打开按钮，在弹出的窗口中选择流程所在路径下的后缀为.autowork的文件，点击打开即可 检查更新。单击左下角的检查更新按钮可以对设计端进行升级。如果已经是最新版则会弹出窗口提示。 鼠标移动到流程上直接点击之后会进入流程设计界面 流程设计界面 一个流程由设计界面的逻辑控制流和组件调用所组成。逻辑控制流负责流程的运行逻辑，不过更重要的是抽象化展示，可以使用户对流程的各部分功能有个清晰的了解；组件调用是执行命令的最小单元，也是 RPA 如此强大的原因之一——它内置了大量可以直接调用的功能模块。 【工具栏】包括返回、保存、上传、运行、停止、撤销、恢复功能。 返回：回到流程管理界面 保存：保存当前的流程状态 上传：将当前设计的流程上传至 AutoWork 商城，需要先在管理端认领需求，上传时选择流程要关联的需求 运行：直接在该页面点击会完整运行整个流程，其他页面点击的效果见下方 停止：中断流程运行，若流程正在运行中则会中断，否则不起作用 撤销：撤销上一步的编辑动作 恢复：恢复撤销的内容 【流程块控件】依次为开始、普通流程、父子流程、循环、判断、结束。 开始：流程运行的入口 普通流程：最常用的控件，在其中可以进行拖拽组件操作并实现几乎所有的流程逻辑 父子流程：容器结构，其内部又是一个完整的流程画布，可以容纳其他普通流程、甚至父子流程。 循环：容器结构，用于对控件内部的流程执行多次重复操作 判断：控制流，在当前画布内通过条件语句控制流程的走向 【流程逻辑编辑区】采用拖拽式的设计方式，用于实现流程。 【流程结构视图】树形结构展示可以编辑的流程信息，点击后会直接跳转到对应的页面。 【流程块属性编辑及显示】用于命名流程块、设置控件的输入输出等功能。 【输出、调试、变量、资源页面】用于展示及管理各项内容，可以收起或展开。 输出：运行流程时打印的信息都显示在这边 调试：在组件调用界面时，工具栏中的运行会多出一个调试选项，以该模式运行时可以在这边对调试进行控制，并看到全局和局部变量的信息，非常方便 变量：可以查看全局与局部变量，后面会详细讲解 资源：流程相关的资源文件，包括但不限于抓取的图片、流程需要调用的 Python 脚本、读取的配置文件等等 点击普通流程控件上面的小铅笔后，进入组件调用界面。 组件调用界面 与每个普通流程内部一一对应，用于编辑普通流程的内容，点击普通流程控件上面的小铅笔之后打开。 【工具栏】和流程设计界面类似，多了录制和批量抓取的功能，这两个功能主要是为了生成相应的组件调用设计的。 录制：弹出录制窗口，根据操作内容自动生成组件 批量抓取：对网页相似元素进行批量抓取，支持自动翻页及元素对齐 【组件库】软件内置的所有的组件，可以直接拖拽至可视化组件调用页面。 【可视化组件调用】采用拖拽式的设计方式，用于实现普通流程。 【流程结构视图】树形结构展示可以编辑的流程信息，点击后会直接跳转到对应的页面。 【输出、调试、变量、资源页面】用于展示及管理各项内容，可以收起或展开。 【组件属性编辑及查看】每个组件的输入参数及返回值都在这边进行设置。 "},"2.2.html":{"url":"2.2.html","title":"工具栏功能","keywords":"","body":"工具栏功能 流程设计界面工具栏 返回 作用：从流程设计界面回到流程管理界面 保存 作用：保存当前的流程状态 上传 作用：将当前设计的流程上传至 AutoWork 商城，需要先在管理端认领需求，上传时选择流程要关联的需求。自己发布需求或者认领别人发布的需求均可 管理端发布需求，登录管理端-需求管理-发布需求 填写需求大类、需求名称、提交需求原因、需求描述、实现功能、原工作时长，上传附件（包括需求文档、流程所需处理的文件模板等），点击确定发布需求 在需求管理页面选择一个需求，点击右侧的认领 回到设计端，点击上传，在这边可以设置流程的名称（不一定要和开发流程时的名称一样），选择关联的需求（从认领过的需求列表里面选），流程描述和流程功能特点为选填，点击确定后，流程会推送到管理端，待发布需求的人员进行审核 运行 运行 作用：完整运行整个流程 操作：直接点击运行按钮 点击后设计端自动最小化防止对运行过程产生干扰，然后从开始位置运行整个流程，运行完毕后设计端取消最小化显示，在输出页面可以看到运行过程产生的信息 运行整个流程 作用：完整运行整个流程 操作：鼠标移到运行按钮上会在下方弹出运行整个流程的按钮，点击此按钮 停止 作用：中断流程运行，若流程正在运行中则会中断，否则不起作用 撤销 作用：撤销上一步的编辑动作 类似Ctrl+Z，当执行了一个不需要的操作，比如拖入了一个不必要的流程块，可以用此按钮撤销操作 恢复 作用：恢复撤销的内容 组件调用界面工具栏 返回 作用：从组件调用界面回到流程管理界面 注意：不是回到流程设计界面。要想回到流程设计界面可以点击【可视化组件调用】上方的标签页或者【流程结构视图】中的根节点 保存 作用：保存当前的流程状态 上传 作用：将当前设计的流程上传至 AutoWork 商城，需要先在管理端认领需求，上传时选择流程要关联的需求。自己发布需求或者认领别人发布的需求均可 运行 运行 作用：只运行当前普通流程 操作：直接点击运行按钮 运行整个流程 作用：完整运行整个流程 操作：鼠标移到运行按钮上会在下方弹出运行整个流程的按钮，点击此按钮 调试 作用：以调试模式运行整个流程 操作：鼠标移到运行按钮上会在下方弹出调试按钮，点击此按钮 停止 作用：中断流程运行，若流程正在运行中则会中断，否则不起作用 撤销 作用：撤销上一步的编辑动作 类似Ctrl+Z，当执行了一个不需要的操作，比如拖入了一个不必要的组件，可以用此按钮撤销操作 恢复 作用：恢复撤销的内容 录制 作用：弹出录制窗口，根据操作内容自动生成组件 录制支持：鼠标单击、双击、右击、悬停，输入文本，获取文本，选择选项框 操作：点击录制按钮，弹出录制工具窗口 点击开始录制按钮 点击元素按钮，选择相应操作后屏幕变成蓝色，此时进入元素选择状态 点击目标元素，或者按ESC取消 点击结束保存按钮，结束并保存录制流程 也可以点击录制工具右上角红叉，取消录制流程 结束并保存录制流程之后会在【可视化组件调用】中直接生成相应的组件 批量抓取 作用：对网页相似元素进行批量抓取 操作：以抓取京东查询笔记本电脑为例。 组件库-软件自动化-浏览器-启动新的浏览器，拖拽到【可视化组件调用】中 组件库-软件自动化-浏览器-打开网页，拖拽到【可视化组件调用】中，并设置属性中的加载链接为京东笔记本电脑的链接 界面定位到网页需要抓取的模块区域 点击批量抓取按钮，弹出批量抓取窗口 点击选择目标，先选择第一个产品的名字 提示请再次抓取相同层级的其他区域，我们点击选择目标，选择第二个产品的名字 此时弹出数据抓取的预览结果 可以点击选取更多继续选择其他信息，比如电脑的价格 点击下一步，设置抓取页类型，可以选择当前页、指定页数以及所有页三种，这里我们选择当前页，点击完成 在【可视化组件调用】中生成了相应的组件，右侧的属性中分别是目标元素的css selector信息、下一页按钮的xpath信息、每一页鼠标滚动次数（为了防止页面有ajax异步加载）、鼠标滚动时所在的坐标、抓取页数、每页元素数、每一页停顿的时间（用于加载元素）、发生错误是否继续运行、抓取结果输出到的变量 点击运行 点击输出页面右上角的打开日志，查看运行结果 "},"2.3.html":{"url":"2.3.html","title":"流程视图","keywords":"","body":"流程视图 在【流程逻辑编辑区】的每一个普通流程、父子流程、循环都会在流程视图界面展示 由于父子流程和循环的容器特性，其内部又能包含其他流程块，所以最后的流程视图是一个树状结构 目前的设计中流程视图按照流程块添加的顺序由上到下展示 下面看一个稍微复杂的流程视图 父子流程中包含一个普通流程块、一个父子流程块和一个循环流程块，其中的父子流程又包含了三个流程块 循环流程中也包含一个普通流程块、一个父子流程块和一个循环流程块 "},"2.4.html":{"url":"2.4.html","title":"日志模块","keywords":"","body":"日志模块 在目前的设计中，日志模块由两部分组成——系统日志和机器人日志。 首先要明确各组成部分。大家能够操作并交互的其实只是前端页面，它和后台功能之间通过 websocket 通信。我们这边要讲的日志模块就是后台功能的一部分。 在前端页面点击运行按钮后，后台功能会先将流程信息编译成 Python 代码再运行，而日志模块在编译和运行阶段都会发挥作用。 系统日志。由安装目录下的resources\\static\\awrunner\\awrunner.exe产生，保存在resources\\static\\awrunner\\log文件夹下。每次运行设计端软件后会拉起 awrunner.exe，然后它会初始化一个系统日志的实例，当天的日志会创建一个当天日期的文件夹并把写入的日志文件保存其中。只要 awrunner 一直运行，这个实例就会一直存在。系统日志主要负责记录后台功能与前端页面之间的通信信息，如果你点击运行流程却没有反应，前端页面的输出窗口也没有任何输出，不妨查看一下系统日志。（注：后期系统日志功能将删除） 机器人日志，或者说流程日志。同样由awrunner.exe产生，保存在流程文件所在路径的log文件夹下，直接在输出窗口点击右上角的打开日志按钮可以查看最近一次生成的日志信息。主要内容包括前端页面传来的信息、编译期间生成的信息以及机器人运行流程时产生的信息。其中，这些日志中类型为info的日志记录在产生的同时还会通过 websocket 传递给前端页面，并在输出窗口显示。 "},"2.5.html":{"url":"2.5.html","title":"输出窗口","keywords":"","body":"输出窗口 在【日志模块】中我们了解到，输出窗口显示的是机器人日志中类型为info的日志记录。 主要输出内容 开始编译工程（流程文件路径） 编译成功，编译后的文件保存在（生成的 Python 文件路径） 开始检测运行环境... 检测成功 开始运行流程（生成的 Python 文件路径）：运行的 Python 文件名 运行过程中产生的类型为info的日志记录 开始时间 结束时间 总时间 运行结束返回：0，成功 其中我们重点关注运行过程中产生的类型为info的日志记录，组件库-语句命令-基本命令中的【输出调试信息】组件可以在运行过程中将变量的信息或者固定的字符串写入到输出窗口，方便查看，这实际上是通过将信息写入为info类型的日志实现的。当然要想查看特定变量的信息还是建议使用调试功能。 点击右上角的打开日志按钮可以查看最近一次生成的日志信息，会调用电脑上默认打开LOG格式文件的软件来打开。 点击右上角的垃圾桶按钮可以清空输出窗口。 在左上角输入想要搜索的内容，会自动跳转到第一个与搜索匹配的位置，同时所有的搜索结果会标红显示。 "},"2.6.html":{"url":"2.6.html","title":"调试窗口","keywords":"","body":"调试窗口 在工具栏功能中我们了解到，调试模式在组件调用界面工具栏中，当鼠标移到运行按钮上会在下方弹出调试按钮，点击此按钮开始调试模式。 调试模式需要配合断点一起使用。也就是说，当没有标记断点信息时，以调试模式运行实际上就跟普通的运行没有区别。标记断点的方式为，鼠标移动到组件调用界面的可视化组件调用页面左侧，也就是行号所在的位置，此时该行会显示一个浅色的圆点，单击之后圆点会变成红色，此时就在该行标记了一个断点；再次单击红点可以取消断点。 标记了断点并点击调试后，在运行到标记行之前会暂停（至少看起来是暂停的效果），并且设计端会从最小化状态变成正常状态，此时调试窗口左侧显示所有的全局变量和局部变量信息。 点击左上角的继续运行，或者按 F6，设计端会最小化，继续运行流程并在遇到下一个断点时暂停。 点击左上角的步过，或者按 F7，设计端会在每一步，也就是对于每一行都会暂停。 右侧的启用状态选项可以一键停用/开启所有的断点。 右侧的垃圾桶按钮可以一键删除所有的断点。 "},"2.7.html":{"url":"2.7.html","title":"变量窗口","keywords":"","body":"变量窗口 这部分我们将了解一下流程的重要组成部分——变量。 变量的主要作用。有两个：数据的存储和传递。首先，任何数据都要保存在某个变量中；或者说，保存在内存中，并用变量指向这片内存，这和 Python 中变量的含义一致（当然了，毕竟是编译生成 Python 代码并运行的）。然后，在调用组件时，变量作为参数被传递给组件，并参与组件的执行（当然也可以不使用变量，而是直接用数字或者字符串这些 Python 内置的值，但是使用了变量之后会方便很多，可以赋值一次并在其他地方多次使用，前提是变量指向的值为不可变类型）。 变量的命名方式。和 Python 一样，可以用任何你喜欢的名字来命名，但不要以数字开头注1。另外，建议的命名方式是用小写英文字母，中间用下划线_隔开，且英文能够明确表达这个变量的含义。比如，假设某个变量是用来代表今天的日期，那么一种合适的命名方式为date_of_today。 全局变量和局部变量。这种区分主要是针对流程块来说的。局部变量只在某个流程块内部有效，而全局变量在所有流程块之间都有效。局部变量的优势在于多个流程块中都能出现相同的变量名，而不会影响各自的运行；全局变量的优势在于变量在多个流程块之间传递很方便，可以直接引用。同样的，各自的劣势分别是各自不具备的对方的优势，局部变量在多个流程块之间传递会很麻烦注2；全局变量很容易被某个流程块改变，而在另一个流程块中引用时获取到了不正确的结果。因此，要学会根据不同的情况使用不同的变量类型。 默认变量。这边的默认变量指的是你不需要创建就能直接使用的变量。AutoWork 内置了很多默认变量，但是默认不显示。当你拖进来一个组件以后，如果组件右侧的属性栏中有输出到这个属性，那么里面的变量就会自动添加到默认变量中。 创建变量。要创建自定义变量有很多种方式，最推荐的是通过变量窗口面板进行创建。 首先在上方选择作用域类型，通过这个来指定要创建的变量是全局还是局部变量。 点击右上角的新增按钮，在变量窗口中会新出现一行，在其中填写变量名称、默认值和描述信息，其中第一项为必填，其他两项选填。 如果有问题可以点击最右边的红色叉取消。 点击最右边的绿色勾保存，这样就创建了一个变量。 新创建的变量总是显示在最上方。 另外，组件库-语句命令-流程控制-变量赋值等方法也可以创建变量，这个在组件使用说明中会提到。 修改变量。在变量窗口单击想要修改的变量，点击右上角的编辑，此时该变量的名称、默认值和描述都变为可编辑状态，修改完成后点击最右边的绿色勾保存。 删除变量。在变量窗口单击想要删除的变量，点击右上角的删除即可。 变量搜索。支持根据变量名称或者描述来模糊搜索变量，直接在变量窗口左上角输入即可。 变量移位。在变量窗口单击想要选择的变量，然后点击右上角的上移按钮，可以让变量的位置往上移动。由于新创建的变量总是显示在最上方，此功能用于将重要的变量移动到上方，便于查看。 注1：如果你用数字开头，设计端不会立即指出你的错误，但是在运行时会报语法错误。 注2：显然一种更合理的方式是把那个变量设置为全局变量，但假设你因为某些原因一定要在两个流程块之间传递局部变量，不妨设从第一个组件块传递给第二个组件块。需要先在第一个流程块中返回该局部变量的值（组件库-语句命令-流程控制-跳出返回），然后在该流程块的属性中设置一个变量用来接收流程块返回的值（在流程设计界面单击组件块，然后在右侧属性栏中的输出里面选择一个变量），接着，把这个变量设置为第二个组件块的输入（在流程设计界面单击那个组件块，然后在右侧属性栏中的输入里面设置刚才的变量），最后，你就可以在第二个组件块中获取输入了（组件库-语句命令-流程控制-获取输入参数），要注意这边获取到的参数实际上是一个元组，要取元组的第一个值才是你要的结果。 "},"2.8.html":{"url":"2.8.html","title":"资源窗口","keywords":"","body":"资源窗口 流程需要使用的一切文件都可以被称为资源。这边展示的是当前流程文件夹下中resource文件夹中的内容。 每个流程都有一些默认资源文件夹，分别为 Python文件、其他文件、图片、系统文件四类。其中组件拾取的元素截图都保存在系统文件的图片文件夹中。 文件夹操作。在左侧某个文件夹上右击可以看到所有操作。 添加文件夹。在当前选择文件夹的同级目录下创建一个新文件夹，默认名字为新建文件夹。 添加子文件夹。在当前选择的文件夹下创建一个子文件夹，默认名字为新建文件夹。 添加资源文件。弹出文件选择窗口，选择好文件并点击打开后会将文件复制到当前文件夹下。 重命名。只有自建的文件夹可以被重命名。 打开所在位置。点击后打开文件夹所在的父目录。 删除。只有自建的文件夹可以被删除。点击后弹出确认是否删除的提示，点击确定后会将文件夹以及里面的所有文件永久删除。 文件操作。在右侧某个文件上右击可以看到所有操作。 复制相对路径。将文件的相对路径复制到剪贴板。 重命名。点击后可以重命名该文件。 打开所在位置。点击后打开文件所在的文件夹目录。 删除。点击后弹出确认是否删除的提示，点击确定后会将文件夹以及里面的所有文件永久删除。 引用资源。该部分提供几个使用资源文件的例子。 案例一：读取配置文件。这边假设将配置文件保存在文件夹其他文件中。 右击其他文件，点击添加资源文件，选择配置文件并添加 在添加的文件上右击，选择复制相对路径 组件库中选择文件处理-文件-读取文件，如果是ini后缀的配置文件则可以选择文件处理-ini配置文件-读取配置文件键值来获取信息 在组件右侧属性栏中的目标文件路径中粘贴刚才复制的相对路径，注意要包在引号中 之后就能引用输出到的变量来获取读取结果了 案例二：调用 Python 脚本。 右击Python文件，点击添加资源文件，选择要调用的 Python 脚本并添加 组件库中选择语句命令-流程控制-导入模块 在组件右侧属性栏中的搜索路径中填写'./resource/Python文件' 在组件右侧属性栏中的模块路径中填写 Python 脚本的名字，注意要包在引号中 之后该 Python 脚本会以import 脚本名的形式编译到普通流程对应的 Python 文件中，通过这个脚本名就可以引用其中的函数、类等信息 "},"2.9.html":{"url":"2.9.html","title":"组件库以及可视化组件调用","keywords":"","body":"组件库以及可视化组件调用 这边是整个设计端占地面积最大的区域，也是在流程开发过程中使用最频繁的地方，因此有必要好好熟悉一下。 组件库 左侧是组件库，所有的组件都在这边显示，一级菜单是组件所属的大类，其中的二级菜单是组件所属的小类，所有的组件都在二级菜单下。鼠标移动到组件上时会在上方弹出一个组件说明，解释该组件的主要功能。 最近使用。这边最多显示 20 条最近使用的组件，刚使用的组件会显示在最上方。 收藏。每个组件右侧都有一个星型图标，点击之后星星变成黄色，表示收藏成功，此时可以在这边看到收藏的组件。建议把最常用的组件都收藏一下，方便使用。 组件搜索。在上方的搜索框中输入组件的部分名称即可模糊搜索到相应的组件。 可视化组件调用区 直接在组件库双击或者拖拽组件至该区域即可添加组件。添加后的组件上有文字说明其主要功能，且选中状态时会显示蓝色。 停用与启用。只有启用状态的组件才会在流程运行时执行。移动到组件上时右侧会出现停用/启用的选项，移到上面并单击即可完成组件的停用/启用；或者也可以右击组件，然后点击停用 (Ctrl+/)；或者也可以单击组件，然后直接按键盘的Ctrl+/。 组件注释。用于展示组件的说明文字。右击组件，然后点击添加注释 (Enter)；或者也可以单击组件，然后直接按键盘的回车键可以打开注释的编辑框，可以在其中输入注释。注释会在组件上以黄色小一号字体显示。 组件编辑。可以复制、剪切、粘贴、删除组件。另外，以下所有操作都可以通过按住Shift键然后选择多个组件进行批量操作，这在某些情况下非常有用。（比如将很多组件同时移动到某个缩进结构中） 复制。右击组件，然后点击复制 (Ctrl+C)；或者也可以单击组件，然后直接按键盘的Ctrl+C。 剪切。右击组件，然后点击复制 (Ctrl+X)；或者也可以单击组件，然后直接按键盘的Ctrl+X。 粘贴。需要先复制或者剪切组件。然后右击某个组件，然后点击粘贴 (Ctrl+V)；或者也可以单击组件，然后直接按键盘的Ctrl+V。粘贴后的组件会插入到当前组件的下面。 删除。右击组件，然后点击删除 (Delete)；或者也可以单击组件，然后直接按键盘的Delete。 移动。单击组件，然后鼠标拖拽至相应位置即可。这个操作相当于剪切+粘贴，或者复制+删除+粘贴。 "},"3.1.html":{"url":"3.1.html","title":"制作你的第一个机器人","keywords":"","body":"制作你的第一个机器人 以打开百度网站并搜索天气为例 点击新建 输入流程目录和名称 点击流程控件右侧的小铅笔进入流程设计界面 从组件库中，选择软件自动化 -> 浏览器 -> 启动新的浏览器，拖拽到可视化窗口中， 或者直接双击组件，则会自动添加到当前选中流程的下一行 在打开链接属性框中输入'https://www.baidu.com/'，字符串用单引号括起来 从组件库中，选择鼠标键盘 -> 键盘 -> 在目标中输入，拖拽到可视化窗口中 手动打开谷歌浏览器，并进入百度网站 单击【在目标中输入】组件上的【查找目标】 将鼠标移入浏览器中的百度搜索框，此时有紫色透明遮罩会覆盖在该按钮上，点击鼠标 点击完鼠标后，目标编辑框中自动填入目标属性 从组件列表中，选择鼠标=》点击目标=》拖拽到可视化窗口中 单击【点击目标】组件上的【查找目标】 将鼠标移入浏览器中的百度搜索按钮，此时有紫色透明遮罩会覆盖在该按钮上，点击鼠标 点击保存，再点运行即可 "}}